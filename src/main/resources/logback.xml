<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod=" 5 seconds" debug="false">
	<jmxConfigurator />

	<property file="/etc/caocao/cdiamond/cdiamond.properties" />
	<property name="LOG_PATH" value="/logs/delay-queue" />
	<property name="LOG_LEVEL" value="INFO" />

	<!--业务日志输出格式 -->
	<property name="SERVICE_OUTPUT_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{INNER_TRACE_ID}] %highlight(%-5level) %boldGreen(%logger{56}) - %msg%n" />

	<!--SQL监控日志输出格式 -->
	<property name="SQL_OUTPUT_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{INNER_TRACE_ID}] %highlight(%-5level) %boldGreen(%logger{56}) - %msg%n" />

	<!--日志文件保留最大天数 -->
	<property name="MAX_DAY" value="30" />
	<property name="MAX_SIZE" value="100mb" />

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>${SERVICE_OUTPUT_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<!-- 过滤掉临界点LOG_LEVEL级别之前的日志 -->
			<level>${LOG_LEVEL}</level>
		</filter>
	</appender>

	<appender name="ADMIN" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_PATH}/admin.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/%d{yyyy-MM-dd}/delay-queue-%d{yyyy-MM-dd}-%i.log.gz
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${MAX_SIZE}</maxFileSize>
		</timeBasedFileNamingAndTriggeringPolicy>
		<maxHistory>${MAX_DAY}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${SERVICE_OUTPUT_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<!-- 过滤掉临界点LOG_LEVEL级别之前的日志 -->
			<level>${LOG_LEVEL}</level>
		</filter>
	</appender>

	<appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_PATH}/delay-queue-error.log</File>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/%d{yyyy-MM-dd}/delay-queue-error-%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${MAX_SIZE}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${MAX_DAY}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${SERVICE_OUTPUT_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>

	<appender name="DUBBO" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_PATH}/dubbo.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/%d{yyyy-MM-dd}/dubbo-%d{yyyy-MM-dd}-%i.log.gz
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${MAX_SIZE}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${MAX_DAY}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${SERVICE_OUTPUT_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<!-- 过滤掉临界点LOG_LEVEL级别之前的日志 -->
			<level>${LOG_LEVEL}</level>
		</filter>
	</appender>

	<appender name="ROOT" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_PATH}/root.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily -->
			<fileNamePattern>${LOG_PATH}/%d{yyyy-MM-dd}/root-%d{yyyy-MM-dd}-%i.log.gz
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- or whenever the file size reaches 100MB -->
				<maxFileSize>${MAX_SIZE}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${MAX_DAY}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${SERVICE_OUTPUT_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<!-- 过滤掉临界点LOG_LEVEL级别之前的日志 -->
			<level>${LOG_LEVEL}</level>
		</filter>
	</appender>

	<appender name="SQL" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_PATH}/sql.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily -->
			<fileNamePattern>${LOG_PATH}/%d{yyyy-MM-dd}/sql-%d{yyyy-MM-dd}-%i.log.gz
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- or whenever the file size reaches 100MB -->
				<maxFileSize>${MAX_SIZE}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${MAX_DAY}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${SQL_OUTPUT_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<!-- 过滤掉临界点LOG_LEVEL级别之前的日志 -->
			<level>DEBUG</level>
		</filter>
	</appender>
	
	<logger name="com.caocao.pay.framework.dubbo.filter" additivity="false">
		<level value="${LOG_LEVEL}" />
		<appender-ref ref="ADMIN" />
		<appender-ref ref="ERROR" />
		<appender-ref ref="STDOUT" />
	</logger>

	<logger name="com.alibaba.dubbo" additivity="false">
		<appender-ref ref="ERROR" />
		<appender-ref ref="DUBBO" />
	</logger>

	<logger name="druid.sql.Statement" additivity="false">
		<level value="DEBUG" />
		<appender-ref ref="ERROR" />
		<appender-ref ref="SQL" />
	</logger>

	<logger name="com.caocao.pay.framework.ibatis.SqlMonitorManager" additivity="false">
		<level value="INFO" />
		<appender-ref ref="ERROR" />
		<appender-ref ref="SQL" />
	</logger>

	<logger name="com.yangwenjie" additivity="true">
		<appender-ref ref="ERROR" />
		<appender-ref ref="ADMIN" />
		<appender-ref ref="STDOUT"/>
	</logger>

	<root level="${LOG_LEVEL}">
		<appender-ref ref="ERROR" />
		<appender-ref ref="ROOT" />
		<appender-ref ref="STDOUT" />
	</root>
</configuration>
